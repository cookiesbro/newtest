.container {
    border: solid 2px red;
    /* по умолчанию flex - контейнер на всю ширину
    есть еще inline-flex - огрничить границы контейнера контентом */
    display: flex;
    /* Для всех элементов! расположение элементов по вертикали внутри горизонтального контейнера (если элементы внутри флекса разной высоты), значение по умолч stretch, flex-start - по верхнему краю, flex-end по нижнему  */
    /* Если нужно отдельный элемент изменить а не все, то align-self (значения те же) */
align-items: center;
/* прикрепление контента справа или слева или центр 
flex-start; flex-end; center
расстояние между контентом
space-between (контент по краям), а space-around с равным расстоянием между контентом */
justify-content: space-around;
/* регулирует перескакивание flex элементов при сужении страницы, по умолч. nowrap.  Есть еще wrap-reverse - обратный порядок построения */
flex-wrap: wrap;
/* МОЖНО СОКРАТИТЬ ВСЕ НИЖНИЕ ЗАПИСИ простой строкой: 1]growth 2]shrink 3]basis*/
flex: 0 1 auto;
/* Размеры flex элементов.на каждый элемент можно свой в px или %
элемент не может уменьшиться менее 500рх*/
flex-basis: 500px;
/* увеличение контента.по умолчанию 0 (нельзя), чтобы элементы заполнили контейнер ставь 1 */
flex-grow: 1;
/* возможность уменьшаться в размере, по умолчанию 1 (можно) */
flex-shrink: 1;
}
.section1 {
    background-color: blueviolet;
    /* Изменяем порядок. Если поставил хоть в одном, то остальные тоже надо проставить */
    order: 3;
}
.section2 {
    background-color: aqua;
    order: 1;
}
.section3 {
    background-color: rgb(226, 137, 5);
    /* меняем вертикальное положение отдельного flex элемента. Значения те же start end и center  */
    align-self: start;
    order: 2;
}
